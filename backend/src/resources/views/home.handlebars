<html>

<head>
    <meta charset="utf-8" />
    <title>Example App - Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
        crossorigin="anonymous"></script>

    <style>
        * {
            box-sizing: border-box;
        }

        form {
            max-width: 500px;
        }
    </style>
</head>

<body>
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <img src="..." class="rounded me-2" alt="...">
                <strong class="me-auto">Bootstrap</strong>
                <small>1 second ago</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">

            </div>
        </div>
    </div>

    <h2>Create product</h2>
    <form class="form m-auto">
        <div class="mb-3">
            <label for="typeInput" class="form-label">Type*</label>
            <input type="text" class="form-control" id="typeInput" required />
        </div>
        <div class="mb-3">
            <label for="nameInput" class="form-label">Name*</label>
            <input type="text" class="form-control" id="nameInput" required />
        </div>
        <div class="mb-3">
            <label for="descriptionInput" class="form-label">Description</label>
            <textarea type="text" class="form-control" id="descriptionInput"></textarea>
        </div>
        <div class="mb-3">
            <label for="collaboratorInput" class="form-label">Collaborator</label>
            <input type="text" class="form-control" id="collaboratorInput" />
        </div>
        <div class="mb-3">
            <label for="originalPriceInput" class="form-label">Original Price ($)*</label>
            <input type="number" class="form-control" id="originalPriceInput" required />
        </div>
        <div class="mb-3">
            <label for="salePriceInput" class="form-label">Sale Price ($)</label>
            <input type="number" class="form-control" id="salePriceInput" />
        </div>
        <div class="mb-3">
            <label for="quantityInput" class="form-label">Quantity</label>
            <input type="number" class="form-control" id="quantityInput" />
        </div>
        <div class="mb-3">
            <label for="imageInput" class="form-label">Image*</label>
            <input type="file" accept="image/*" class="form-control" id="imageInput" required />
        </div>
        <button type="submit" class="btn btn-primary">Create</button>
    </form>

    <script>
        const typeInput = document.getElementById("typeInput");
        const nameInput = document.getElementById("nameInput");
        const descriptionInput = document.getElementById("descriptionInput");
        const collaboratorInput = document.getElementById("collaboratorInput");
        const originalPriceInput = document.getElementById("originalPriceInput");
        const salePriceInput = document.getElementById("salePriceInput");
        const quantityInput = document.getElementById("quantityInput");
        const imageInput = document.getElementById("imageInput");
        const createBtn = document.querySelector(".btn");
        let baseImage;
        const toast = document.querySelector(".toast");
        const toastBody = document.querySelector(".toast-body");

        const postData = async (url = "", data = {}) => {
            const response = await fetch(url, {
                method: "POST",
                mode: "cors",
                cache: "no-cache",
                credentials: "same-origin",
                headers: {
                    "Content-Type": "application/json",
                },
                redirect: "follow",
                referrerPolicy: "no-referrer",
                body: JSON.stringify(data),
            });
            return response.json();
        };

        async function getBase64(file) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () {
                baseImage = reader.result;
            };
            reader.onerror = function (error) {
                console.log(error);
            };
        }

        imageInput.addEventListener("change", async (e) => {
            await getBase64(e.target.files[0]);
        });

        createBtn.addEventListener("click", async (e) => {
            e.preventDefault();

            try {
                await postData("http://localhost:3001/products/create", {
                    type: typeInput.value,
                    image: baseImage,
                    name: nameInput.value,
                    description: descriptionInput.value,
                    collaborator: collaboratorInput.value,
                    originalPrice: originalPriceInput.value,
                    salePrice: salePriceInput.value,
                    quantity: quantityInput.value,
                });
                toastBody.textContent = "Create successfully";
                toast.classList.add("show");
            } catch (error) {
                toastBody.textContent = error;
                toast.classList.add("show");
            }

            setTimeout(() => toast.classList.remove('show'), 3000);
        });


    </script>
</body>

</html>